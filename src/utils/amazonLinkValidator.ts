import { generateSmartAffiliateLink, Region } from './budgetAllocator';
import { verifiedASINDatabase } from '../data/verifiedASINs';

/**
 * Tool to validate that Amazon links are working correctly
 * This helps debug link generation and ASIN issues
 */
export class AmazonLinkValidator {
  
  /**
   * Test verified ASIN links across all regions
   */
  static testVerifiedLinks(): void {
    console.log('🧪 Testing Verified Amazon Links Across All Regions');
    console.log('═'.repeat(60));
    
    const regions: Region[] = ['US', 'CA', 'UK', 'DE', 'AU'];
    
    // Test a few sample components
    const testComponents = verifiedASINDatabase.slice(0, 5);
    
    testComponents.forEach(verifiedComponent => {
      console.log(`\n📦 ${verifiedComponent.componentName}:`);
      
      regions.forEach(region => {
        const asin = verifiedComponent.asins[region];
        if (asin) {
          // Create mock component for testing
          const mockComponent = {
            id: 'test',
            name: verifiedComponent.componentName,
            brand: 'Test',
            price: { US: 500, CA: 650, UK: 450, DE: 480, AU: 750 },
            specs: {},
            asin: 'placeholder', // Force use of verified ASIN
            availability: 'in-stock' as const,
            trend: 'stable' as const,
            category: verifiedComponent.category,
            description: 'Test component'
          };
          
          const link = generateSmartAffiliateLink(mockComponent, region);
          console.log(`  ${region}: ${link}`);
        } else {
          console.log(`  ${region}: ❌ No ASIN available`);
        }
      });
    });
  }

  /**
   * Test specific component name across regions
   */
  static testComponentByName(componentName: string): void {
    console.log(`🔍 Testing component: ${componentName}`);
    console.log('═'.repeat(40));
    
    const regions: Region[] = ['US', 'CA', 'UK', 'DE', 'AU'];
    
    const mockComponent = {
      id: 'test',
      name: componentName,
      brand: 'Test',
      price: { US: 500, CA: 650, UK: 450, DE: 480, AU: 750 },
      specs: {},
      asin: 'invalid', // Force verified ASIN lookup
      availability: 'in-stock' as const,
      trend: 'stable' as const,
      category: 'cpu' as const,
      description: 'Test component'
    };
    
    regions.forEach(region => {
      const link = generateSmartAffiliateLink(mockComponent, region);
      const isSearch = link.includes('/s?k=');
      const emoji = isSearch ? '🔍' : '🛒';
      console.log(`${emoji} ${region}: ${link}`);
    });
  }

  /**
   * Generate example links for documentation
   */
  static generateExampleLinks(): void {
    console.log('📋 Example Amazon Links Generated by PC Builder:');
    console.log('═'.repeat(50));
    
    const examples = [
      { name: 'Intel Core i9-14900K', expectedASIN: 'B0CHX7TPCX' },
      { name: 'AMD Ryzen 9 7950X', expectedASIN: 'B0BBHHT8LY' },
      { name: 'NVIDIA GeForce RTX 4090', expectedASIN: 'B0BGP46F8R' },
      { name: 'Nonexistent Component', expectedASIN: null }
    ];
    
    examples.forEach(example => {
      console.log(`\n🔧 ${example.name}:`);
      
      const mockComponent = {
        id: 'test',
        name: example.name,
        brand: 'Test',
        price: { US: 500, CA: 650, UK: 450, DE: 480, AU: 750 },
        specs: {},
        asin: 'test',
        availability: 'in-stock' as const,
        trend: 'stable' as const,
        category: 'cpu' as const,
        description: 'Test component'
      };
      
      const usLink = generateSmartAffiliateLink(mockComponent, 'US');
      const caLink = generateSmartAffiliateLink(mockComponent, 'CA');
      
      console.log(`  🇺🇸 US: ${usLink}`);
      console.log(`  🇨🇦 CA: ${caLink}`);
      
      if (example.expectedASIN) {
        const hasCorrectASIN = usLink.includes(example.expectedASIN);
        console.log(`  ✅ Uses verified ASIN: ${hasCorrectASIN ? 'Yes' : 'No'}`);
      }
    });
  }

  /**
   * Validate Amazon link format
   */
  static validateLinkFormat(url: string): {
    isValid: boolean;
    issues: string[];
    linkType: 'product' | 'search' | 'invalid';
    extractedInfo: {
      domain?: string;
      asin?: string;
      affiliateTag?: string;
      region?: string;
    };
  } {
    const issues: string[] = [];
    let linkType: 'product' | 'search' | 'invalid' = 'invalid';
    const extractedInfo: any = {};
    
    try {
      const urlObj = new URL(url);
      extractedInfo.domain = urlObj.hostname;
      
      // Determine region from domain
      if (urlObj.hostname.includes('amazon.ca')) extractedInfo.region = 'CA';
      else if (urlObj.hostname.includes('amazon.co.uk')) extractedInfo.region = 'UK';
      else if (urlObj.hostname.includes('amazon.de')) extractedInfo.region = 'DE';
      else if (urlObj.hostname.includes('amazon.com.au')) extractedInfo.region = 'AU';
      else if (urlObj.hostname.includes('amazon.com')) extractedInfo.region = 'US';
      else issues.push('Unknown Amazon domain');
      
      // Check for affiliate tag
      const tag = urlObj.searchParams.get('tag');
      if (tag) {
        extractedInfo.affiliateTag = tag;
      } else {
        issues.push('Missing affiliate tag');
      }
      
      // Determine link type
      if (urlObj.pathname.startsWith('/dp/')) {
        linkType = 'product';
        // Extract ASIN
        const asinMatch = urlObj.pathname.match(/\/dp\/([A-Z0-9]{10})/);
        if (asinMatch) {
          extractedInfo.asin = asinMatch[1];
        } else {
          issues.push('Invalid ASIN format in product link');
        }
        
        // Check for correct ref parameter
        if (!url.includes('/ref=nosim')) {
          issues.push('Missing /ref=nosim in product link');
        }
      } else if (urlObj.pathname.startsWith('/s')) {
        linkType = 'search';
        const searchQuery = urlObj.searchParams.get('k');
        if (searchQuery) {
          extractedInfo.searchQuery = searchQuery;
        } else {
          issues.push('Missing search query in search link');
        }
      } else {
        issues.push('Unknown Amazon link format');
      }
      
    } catch (error) {
      issues.push(`Invalid URL format: ${error}`);
    }
    
    return {
      isValid: issues.length === 0,
      issues,
      linkType,
      extractedInfo
    };
  }

  /**
   * Quick health check of current link generation
   */
  static healthCheck(): void {
    console.log('🏥 Amazon Link Generation Health Check');
    console.log('═'.repeat(40));
    
    let totalTests = 0;
    let passedTests = 0;
    
    // Test 1: Verified component should use verified ASIN
    totalTests++;
    const intelLink = this.testSingleComponent('Intel Core i9-14900K', 'US');
    if (intelLink.includes('B0CHX7TPCX')) {
      console.log('✅ Test 1: Verified components use verified ASINs');
      passedTests++;
    } else {
      console.log('❌ Test 1: Verified components not using verified ASINs');
    }
    
    // Test 2: Unknown component should fallback to search
    totalTests++;
    const unknownLink = this.testSingleComponent('Unknown Fake Component 9000', 'US');
    if (unknownLink.includes('/s?k=')) {
      console.log('✅ Test 2: Unknown components fallback to search');
      passedTests++;
    } else {
      console.log('❌ Test 2: Unknown components not falling back to search');
    }
    
    // Test 3: Canadian links should use amazon.ca
    totalTests++;
    const caLink = this.testSingleComponent('Intel Core i9-14900K', 'CA');
    if (caLink.includes('amazon.ca')) {
      console.log('✅ Test 3: Canadian links use amazon.ca domain');
      passedTests++;
    } else {
      console.log('❌ Test 3: Canadian links not using amazon.ca domain');
    }
    
    // Test 4: Links should include affiliate tags
    totalTests++;
    const taggedLink = this.testSingleComponent('Intel Core i9-14900K', 'US');
    if (taggedLink.includes('tag=')) {
      console.log('✅ Test 4: Links include affiliate tags');
      passedTests++;
    } else {
      console.log('❌ Test 4: Links missing affiliate tags');
    }
    
    console.log(`\n📊 Health Check Results: ${passedTests}/${totalTests} tests passed`);
    
    if (passedTests === totalTests) {
      console.log('🎉 All tests passed! Amazon link generation is working correctly.');
    } else {
      console.log('⚠️ Some tests failed. Check the implementation.');
    }
  }

  private static testSingleComponent(name: string, region: Region): string {
    const mockComponent = {
      id: 'test',
      name: name,
      brand: 'Test',
      price: { US: 500, CA: 650, UK: 450, DE: 480, AU: 750 },
      specs: {},
      asin: 'invalid',
      availability: 'in-stock' as const,
      trend: 'stable' as const,
      category: 'cpu' as const,
      description: 'Test component'
    };
    
    return generateSmartAffiliateLink(mockComponent, region);
  }
}

// Browser console utilities
if (typeof window !== 'undefined') {
  (window as any).testVerifiedLinks = () => AmazonLinkValidator.testVerifiedLinks();
  (window as any).testComponent = (name: string) => AmazonLinkValidator.testComponentByName(name);
  (window as any).generateExampleLinks = () => AmazonLinkValidator.generateExampleLinks();
  (window as any).validateAmazonLink = (url: string) => AmazonLinkValidator.validateLinkFormat(url);
  (window as any).amazonHealthCheck = () => AmazonLinkValidator.healthCheck();

  console.log('🔗 Amazon Link Validation utilities loaded!');
  console.log('- testVerifiedLinks() - Test verified ASIN database');
  console.log('- testComponent("Intel i9-14900K") - Test specific component');
  console.log('- generateExampleLinks() - Show example generated links');
  console.log('- validateAmazonLink(url) - Validate Amazon link format');
  console.log('- amazonHealthCheck() - Quick system health check');
}